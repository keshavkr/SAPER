 
package oracle.iam.connectors.sap.cup.ws.audit;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.spi.Provider;


/**
 * This class was generated by the JAX-WS RI.
 * Oracle JAX-WS 2.1.3-06/19/2008 07:03 PM(bt)
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "SAPGRC_AC_IDM_AUDITTRAIL", targetNamespace = "urn:SAPGRC_AC_IDM_AUDITTRAILWsd", wsdlLocation = "http://<hostname>:<port>/SAPGRC_AC_IDM_AUDITTRAIL/Config1?wsdl")
public class SAPGRCACIDMAUDITTRAIL
    extends Service
{

    private final static URL SAPGRCACIDMAUDITTRAIL_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(oracle.iam.connectors.sap.cup.ws.audit.SAPGRCACIDMAUDITTRAIL.class.getName());

    static {
        URL url = null;
        try {
            Provider provider = Provider.provider();
            Class wlsProviderClass = null;
            Method wlsLocateWsdl = null;
            try {
                wlsProviderClass = Class.forName("weblogic.wsee.jaxws.spi.WLSProvider");
                wlsLocateWsdl = wlsProviderClass.getMethod("locateWsdl", Class.class);
            } catch (ClassNotFoundException cnfe) {
            } catch (NoSuchMethodException nsme) {
            }
            if ((wlsLocateWsdl!= null)&&wlsProviderClass.isAssignableFrom(provider.getClass())) {
                try {
                    url = ((URL) wlsLocateWsdl.invoke(provider, oracle.iam.connectors.sap.cup.ws.audit.SAPGRCACIDMAUDITTRAIL.class));
                } catch (IllegalAccessException iae) {
                } catch (IllegalArgumentException ia) {
                } catch (InvocationTargetException ite) {
                }
            }
            if (url == null) {
                URL baseUrl;
                baseUrl = oracle.iam.connectors.sap.cup.ws.audit.SAPGRCACIDMAUDITTRAIL.class.getResource(".");
                url = new URL(baseUrl, "http://<hostname>:<port>/SAPGRC_AC_IDM_AUDITTRAIL/Config1?wsdl");
            }
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://<hostname>:<port>/SAPGRC_AC_IDM_AUDITTRAIL/Config1?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        SAPGRCACIDMAUDITTRAIL_WSDL_LOCATION = url;
    }

    public SAPGRCACIDMAUDITTRAIL(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SAPGRCACIDMAUDITTRAIL() {
        super(SAPGRCACIDMAUDITTRAIL_WSDL_LOCATION, new QName("urn:SAPGRC_AC_IDM_AUDITTRAILWsd", "SAPGRC_AC_IDM_AUDITTRAIL"));
    }

    /**
     * 
     * @return
     *     returns SAPGRCACIDMAUDITTRAILViDocument
     */
    @WebEndpoint(name = "Config1Port_Document")
    public SAPGRCACIDMAUDITTRAILViDocument getConfig1PortDocument() {
        return super.getPort(new QName("urn:SAPGRC_AC_IDM_AUDITTRAILWsd", "Config1Port_Document"), SAPGRCACIDMAUDITTRAILViDocument.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SAPGRCACIDMAUDITTRAILViDocument
     */
    @WebEndpoint(name = "Config1Port_Document")
    public SAPGRCACIDMAUDITTRAILViDocument getConfig1PortDocument(WebServiceFeature... features) {
        return super.getPort(new QName("urn:SAPGRC_AC_IDM_AUDITTRAILWsd", "Config1Port_Document"), SAPGRCACIDMAUDITTRAILViDocument.class, features);
    }

}
